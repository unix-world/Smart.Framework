<!-- logs list v.20231114 -->
[%%%IF:APP-ID:!=;%%%]
<style>
div.logsRow {
	background: #ECECEC;
	color: #555555;
	padding: 5px;
	margin: 2px;
	margin-left: 12px;
	margin-right: 12px;
	font-weight: bold;
	font-size: 1.125rem;
}
div.logsRow:hover {
	background: #DDEEFF;
}
div.logsRow:focus {
	background: #FFFF88;
}
span.filterInfo {
	font-size: 0.875rem !important;
}
span.filter-search-value {
	color: #333333;
}
</style>
<script>
const getSelectedList = (name) => {
	let arr = [];
	name = AppJs.stringPureVal(name, true);
	if(name == '') {
		console.warn('getSelectedList', 'Empty Name');
		return arr;
	}
	$('input:checkbox[name=' + name + ']:checked').each((idx, el) => {
		arr.push($(el).val());
	});
	if(arr.length <= 0) {
		AppJs.displayAlertDialog('<div class="operation_notice">Nothing selected</div>', null, 'Selection', 550, 200);
	}
	return arr;
};
const submitSelectedList = (name) => {
	const arr = getSelectedList(name);
	if(arr.length > 0) {
		AppJs.displayConfirmDialog(
			'<div class="operation_important">AppID: `[###APP-ID|js###]`<br>Remove selected Logs from the Server ? Press OK to Confirm.</div><div class="operation_info">This operation cannot be undone ...</div>',
			() => {
				const dTime = new Date();
				const uuid = AppJs.sha1(dTime) + '-' + AppJs.md5(dTime);
				const theList = AppJs.b64enc(AppJs.bfEnc(uuid, JSON.stringify(arr)));
				const theData = {
					frm: {
						appid: '[###APP-ID|js###]',
						uuid: uuid,
						list: theList,
						checksum: AppJs.sh3a512(theList + '#' + uuid, true),
					}
				};
				showLoader();
				AppJs.removeAllGrowls();
				setTimeout(() => {
					AppJs.SubmitAjaxRequest(AppJs.url_add_suffix('[###SCRIPT|js###]', 'action=logs-cleanup'), theData, () => { hideLoader(); setTimeout(() => { self.location=self.location; }, 2500); }, () => { hideLoader(); }, () => { hideLoader(); });
				}, 750);
			},
			'LOGS Cleanup Confirmation / AppID: `[###APP-ID|js###]`',
			700,
			350
		);
	} else {
		AppJs.displayAlertDialog('<div class="operation_notice">Nothing selected</div>', null, 'Selection', 550, 200);
	}
};
</script>
[%%%IF:LOGS-ARR:@>0;%%%]
<div class="operation_info">
	List of Logs for AppID: `[###APP-ID|html###]`:
	&nbsp;&nbsp;&nbsp;
	<button class="ux-button ux-button-super ux-button-highlight" onClick="submitSelectedList('logs'); return false;">Cleanup: Delete Selected Logs</button>
</div>
<div>
<div class="logsRow">
	<input type="checkbox" onClick="(() => { const isSelected = AppJs.selectAllCheckBoxes('logs'); $(this).prop('checked', isSelected); })();"> &nbsp;
	&nbsp;&nbsp;&nbsp;
	<input type="text" class="ux-field" id="filter-list" maxlength="255"> <button class="ux-button ux-button-info ux-button-small" onClick="filterList(true);">Display by Filter</button> <button class="ux-button ux-button-secondary ux-button-small" onClick="filterList(false);">Display All</button> <span id="filter-info" class="filterInfo">Displaying ALL Results</span><span class="filterInfo"> ; Reverse Order (newest first)</span>
</div>
[%%%LOOP:LOGS-ARR%%%]
<div class="logsRow filter-search-container" tabindex="[###LOGS-ARR.-_INDEX_-|int###]">
	<input type="checkbox" name="logs" value="[###LOGS-ARR.ID|html###]"> &nbsp;
	<a title="[###LOGS-ARR.ID|html###] @ [###LOGS-ARR.SIZE|html###]" target="_blank" href="[###URL-LOG-VIEW|html###]&appid=[###APP-ID|url|html###]&log=[###LOGS-ARR.ID|url|html###]" onClick="$(this).parent().focus(); AppJs.popUpWnd(this.href, 'appcodeunpack__log_view'); return false;">[###LOGS-ARR.-_INDEX_-|html###]. &nbsp; [###APP-LOG-DIR|html###]<span class="filter-search-value">[###LOGS-ARR.ID|html###]</span> &nbsp;&nbsp;&nbsp; [###LOGS-ARR.SIZE|html###]</a>
</div>
[%%%/LOOP:LOGS-ARR%%%]
</div>
[%%%ELSE:LOGS-ARR%%%]
<div class="operation_notice">There are no logs on this App Server for AppID: `[###APP-ID|html###]` ...</div>
[%%%/IF:LOGS-ARR%%%]
[%%%ELSE:APP-ID%%%]
<script>
const selectAppID = () => {
	const selectedAppId = AppJs.stringPureVal($('#select-appid').val(), true);
	if(!selectedAppId) {
		AppJs.displayAlertDialog('<div class="operation_notice">NO AppID Selected ...</div>', null, 'Select an AppID', 550, 200);
		return;
	}
	setTimeout(() => {
		self.location = AppJs.url_add_suffix('[###SCRIPT|js###]', 'action=logs-list&appid=' + AppJs.escape_url(selectedAppId));
	}, 250);
};
</script>
<center>
<br>
<select id="select-appid" name="appid" title="Select an AppID from the list" class="ux-field ux-field-xl customList" autocomplete="off">
<option value="">--- No AppID Selected ---</option>
[%%%LOOP:APP-IDS-ARR%%%]
<option value="[###APP-IDS-ARR._-VAL-_|html###]">[###APP-IDS-ARR._-VAL-_|html###]</option>
[%%%/LOOP:APP-IDS-ARR%%%]
</select> &nbsp;&nbsp; <button id="unpack-bttn-select" type="button" class="ux-button ux-button-super ux-button-primary" onClick="selectAppID(); return false;">Select an AppID to List the Logs on this Server</button>
</center>
[%%%/IF:APP-ID%%%]